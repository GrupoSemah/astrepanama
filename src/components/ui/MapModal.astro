---
interface Props {
  imageUrl: string;
  imageAlt?: string;
}

const { imageUrl, imageAlt = "Mapa ampliado" } = Astro.props;
---

<div id="map-modal" class="fixed inset-0 z-50 hidden items-center justify-center">
  <div class="absolute inset-0 bg-primary opacity-80"></div>
  <div class="relative z-10 w-full max-w-6xl max-h-[90vh] overflow-hidden">
    <button 
      id="close-modal" 
      class="absolute top-4 right-4 z-20 bg-white/90 rounded-full p-2 flex items-center justify-center hover:bg-white transition-colors"
      aria-label="Cerrar modal"
    >
      <svg 
        width="24" 
        height="24" 
        viewBox="0 0 24 24" 
        fill="none" 
        xmlns="http://www.w3.org/2000/svg"
      >
        <path 
          d="M18 6L6 18M6 6L18 18" 
          stroke="#222222" 
          stroke-width="2" 
          stroke-linecap="round" 
          stroke-linejoin="round"
        />
      </svg>
    </button>
    
    <div class="relative w-full h-full p-4 md:p-8 overflow-auto">
      <img 
        src={imageUrl} 
        alt={imageAlt} 
        class="w-full h-auto object-contain"
        id="modal-map-image" 
      />
    </div>
  </div>
</div>

<script is:inline>
  // Funciones globales para operar el modal del mapa
  function openMapModal(imageUrl) {
    const mapModal = document.getElementById('map-modal');
    const modalImage = document.getElementById('modal-map-image');
    
    if (mapModal && modalImage) {
      if (imageUrl) {
        modalImage.src = imageUrl;
      }
      
      // Mostrar modal
      mapModal.classList.remove('hidden');
      mapModal.classList.add('flex');
      document.body.style.overflow = 'hidden';
      
      // Añadir listener para tecla Escape
      document.addEventListener('keydown', handleEscape);
    }
  }
  
  function closeMapModal() {
    const mapModal = document.getElementById('map-modal');
    
    if (mapModal) {
      mapModal.classList.add('hidden');
      mapModal.classList.remove('flex');
      document.body.style.overflow = '';
      
      // Eliminar listener de tecla Escape
      document.removeEventListener('keydown', handleEscape);
    }
  }
  
  function handleEscape(e) {
    if (e.key === 'Escape') {
      closeMapModal();
    }
  }
  
  // Inicializar el botón de cierre cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    const closeModalBtn = document.getElementById('close-modal');
    
    if (closeModalBtn) {
      closeModalBtn.addEventListener('click', closeMapModal);
    }
  });
  
  // También podemos seguir soportando el evento personalizado por compatibilidad
  document.addEventListener('openMapModal', (e) => {
    const detail = e.detail || {};
    openMapModal(detail.imageUrl);
  });
</script>
