---
import { getVideoUrl, getPdfUrl, getImageUrl } from '@/services/cloudStorage';

interface Props {
  title?: string;
}

const { title = "Apartamentos" } = Astro.props;

const folderName = "APARTAMENTOS";
const videoFileName = "Video%20Astre%20(Apto%20Modelo).mp4";
const pdfFileName = "Plantas_Astre.pdf";

const videoUrl = getVideoUrl(videoFileName, folderName);
const pdfUrl = getPdfUrl(pdfFileName, folderName);

const videoPreviewImageId = "Disen%CC%83o_Imagenes-05.webp";
const videoPreviewUrl = getImageUrl(videoPreviewImageId, "DISENO");
---

<div class="bg-primary w-screen min-h-screen flex flex-col justify-center overflow-hidden relative" style="margin-left: calc(-50vw + 50%); margin-right: calc(-50vw + 50%); width: 100vw;">
  <!-- Gráfico decorativo superior izquierda -->
  <div class="absolute top-16 left-16 z-0 ">
    <img src="/icons/svg/background-menu.svg" alt="" class="w-80 h-80 object-cover rotate-90" />
  </div>
  
  <!-- Gráfico decorativo inferior derecha -->
  <div class="absolute bottom-0 right-16 z-0">
    <img src="/icons/svg/background-menu.svg" alt="" class="w-80 h-80 object-cover" />
  </div>
  <div class="md:hidden w-full px-8 py-16 flex flex-col justify-center relative">
    <div class="max-w-md mx-auto w-full relative">
      <div class="text-center mb-6">
        <h2 class="text-4xl text-white mb-2" style="font-family: var(--font-heading); font-weight: var(--font-heading-weight);">
          Espacios que elevan tu experiencia diaria
        </h2>
        <p class="text-md text-white opacity-90 mt-12" style="font-family: var(--font-body); font-weight: var(--font-body-weight);">
          Cada apartamento en PH Astre ha sido concebido para ofrecer amplitud,<br/>luminosidad y detalles a cada espacio cuidadosamente seleccionados.
        </p>
      </div>
      
      <div class="mb-6">
        <div class="relative rounded-lg overflow-hidden video-container" data-video-url={videoUrl}>
          <img src={videoPreviewUrl} alt="Interior apartamento" class="w-full h-64 object-cover video-preview" />
          <div class="absolute inset-0 flex items-center justify-center video-play-button">
            <div class="w-16 h-16 bg-white/30 backdrop-blur-sm rounded-full flex items-center justify-center hover:bg-white/40 transition-all cursor-pointer">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M8 5V19L19 12L8 5Z" fill="white" stroke="white" stroke-width="2" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
        </div>
      </div>
      
      <div class="text-center mb-6">
        <p class="text-2xl text-white" style="font-family: var(--font-heading); font-weight: var(--font-heading-weight);">
          apartamentos de 2 y 3.5<br/>recámaras desde 100m²
        </p>
      </div>
      
      <div class="flex justify-center relative z-10">
        <a href={pdfUrl} target="_blank" class="group inline-flex items-center justify-center px-6 py-3 border-2 border-white text-white font-medium rounded-lg transition-colors hover:bg-white hover:text-[#222222] w-full relative z-10" id="mobile-pdf-link">
          <span>Ver plantas arquitectónicas</span>
          <svg 
            class="ml-2 w-5 h-5 transition-transform duration-300 group-hover:rotate-90" 
            viewBox="0 0 24 24" 
            fill="none" 
            xmlns="http://www.w3.org/2000/svg">
            <path 
              d="M7 17L17 7M17 7H7M17 7V17" 
              stroke="currentColor" 
              stroke-width="2" 
              stroke-linecap="round" 
              stroke-linejoin="round"
            />
          </svg>
        </a>
      </div>
    </div>
  </div>
  
  <div class="hidden md:block w-full px-8 py-16">
    <div class="max-w-7xl mx-auto">
      <div class="text-center mb-16">
        <h2 class="text-5xl text-white mb-4" style="font-family: var(--font-heading); font-weight: var(--font-heading-weight);">
          Espacios que elevan tu experiencia diaria
        </h2>
        <p class="text-lg text-white opacity-90 max-w-3xl mx-auto" style="font-family: var(--font-body); font-weight: var(--font-body-weight);">
          Cada apartamento en PH Astre ha sido concebido para ofrecer amplitud,
          luminosidad y detalles a cada espacio cuidadosamente seleccionados.
        </p>
      </div>
      
      <div class="grid grid-cols-2 gap-20 items-center">
        <div class="px-20">
          <p class="md:text-4xl text-2xl text-white mb-10" style="font-family: var(--font-heading); font-weight: var(--font-heading-weight);">
            Apartamentos de 2 y 3.5<br/>recámaras desde 100m²
          </p>
          
          <a href={pdfUrl} target="_blank" class="group inline-flex items-center px-8 py-3.5 border-2 border-white text-white font-medium rounded-lg transition-colors hover:bg-white hover:text-[#222222] relative z-10" id="desktop-pdf-link">
            <span>Ver plantas arquitectónicas</span>
            <svg 
              class="ml-2 w-5 h-5 transition-transform duration-300 group-hover:rotate-90" 
              viewBox="0 0 24 24" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg">
              <path 
                d="M7 17L17 7M17 7H7M17 7V17" 
                stroke="currentColor" 
                stroke-width="2" 
                stroke-linecap="round" 
                stroke-linejoin="round"
              />
            </svg>
          </a>
        </div>
        
        <div class="relative rounded-xl overflow-hidden video-container" data-video-url={videoUrl}>
          <img src={videoPreviewUrl} alt="Interior apartamento" class="w-full h-auto object-cover video-preview" />
          <div class="absolute inset-0 flex items-center justify-center video-play-button">
            <div class="w-20 h-20 bg-white/30 backdrop-blur-sm rounded-full flex items-center justify-center hover:bg-white/40 transition-all cursor-pointer">
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M8 5V19L19 12L8 5Z" fill="white" stroke="white" stroke-width="2" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // No manipulamos los enlaces PDF - dejamos que el comportamiento nativo del navegador funcione
    // Los enlaces ya tienen target="_blank" configurado en el HTML
    
    const videoContainers = document.querySelectorAll('.video-container');
    
    videoContainers.forEach(container => {
      const playButton = container.querySelector('.video-play-button');
      const videoUrl = container.getAttribute('data-video-url');
      
      if (playButton && videoUrl) {
        playButton.addEventListener('click', () => {
          // Crear un video player en lugar de solo un elemento de video
          const playerContainer = document.createElement('div');
          playerContainer.className = 'relative w-full h-full';
          
          // Crear el elemento de video con atributos necesarios
          const videoElement = document.createElement('video');
          videoElement.src = videoUrl;
          videoElement.className = 'w-full h-full object-cover';
          videoElement.controls = true;
          videoElement.playsInline = true; // Importante para iOS
          videoElement.autoplay = true;
          videoElement.muted = false;
          videoElement.preload = 'auto';
          
          // Importante: establecer el tipo MIME para ayudar al navegador
          const sourceElement = document.createElement('source');
          sourceElement.src = videoUrl;
          sourceElement.type = 'video/mp4';
          videoElement.appendChild(sourceElement);
          
          // Agregar mensaje de fallback
          videoElement.innerHTML = 'Su navegador no soporta la reproducción de videos.';
          
          // Eliminar los elementos previos
          container.querySelector('.video-preview')?.remove();
          container.querySelector('.video-play-button')?.remove();
          
          // Agregar el nuevo player
          playerContainer.appendChild(videoElement);
          container.appendChild(playerContainer);
          
          // Intentar reproducir el video
          videoElement.load(); // Importante para forzar la carga
          
          const playPromise = videoElement.play();
          
          // Manejar la promesa de reproducción
          if (playPromise !== undefined) {
            playPromise
              .then(() => {
                console.log('Video comenzó a reproducirse con éxito');
              })
              .catch(error => {
                console.error('Error al reproducir video:', error);
                // Si falla, mostrar un botón para intentar reproducir manualmente
                const retryButton = document.createElement('button');
                retryButton.className = 'absolute inset-0 flex items-center justify-center bg-black/40';
                retryButton.innerHTML = `
                  <div class="p-4 bg-white/80 backdrop-blur-sm rounded-lg">
                    <span>Toca para reproducir el video</span>
                  </div>
                `;
                playerContainer.appendChild(retryButton);
                
                retryButton.addEventListener('click', () => {
                  videoElement.play();
                  retryButton.remove();
                });
              });
          }
        });
      }
    });
  });
</script>